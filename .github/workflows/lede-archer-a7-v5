#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Coolsnowwolf/lede-archer-a7-v5
on:
  workflow_dispatch:
#  schedule:
#    - cron: 0 18 * * *
#  watch:
#    types: started

env:
  TOOLCHAIN_TAG: coolsnowwolf-lede-master
  TOOLCHAIN_NAME: toolchain-image-coolsnowwolf-lede-master-ath79-generic.img
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

      - name: Prepare Toolchain Image
        id: prepare
        run: |
          df -hT $PWD
          sudo swapoff -a
          sudo chown -R runner:runner /mnt
          sudo rm -f /mnt/swapfile
          wget -q https://github.com/wwng2333/OpenWrt-Toolchain/releases/download/coolsnowwolf-lede-master/toolchain-image-coolsnowwolf-lede-master-ath79-generic.img -O /mnt/toolchain-image.img
          mkdir /mnt/openwrt-ro openwrt workdir overlay
          sudo mount -o loop /mnt/toolchain-image.img /mnt/openwrt-ro
          sudo mount -t overlay overlay -o lowerdir=/mnt/openwrt-ro,upperdir=overlay,workdir=workdir openwrt

      - name: Install Feeds
        id: feeds
        run: |
          cd openwrt
          echo "OPENWRTROOT=$PWD" >> $GITHUB_ENV
          git pull
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Download Packages
        id: download
        run: |
          cd $OPENWRTROOT
          rm -f ./.config*
          touch ./.config
          
          cat >> .config <<EOF
          CONFIG_TARGET_ath79=y
          CONFIG_TARGET_ath79_generic=y
          CONFIG_TARGET_ath79_generic_DEVICE_tplink_archer-a7-v5=y
          CONFIG_KERNEL_BUILD_USER="wwng"
          CONFIG_KERNEL_BUILD_DOMAIN="Azure"
          CONFIG_PACKAGE_luci-i18n-base-en=y
          CONFIG_LUCI_LANG_en=y
          CONFIG_PACKAGE_ttyd=y
          CONFIG_PACKAGE_luci-app-ttyd=y
          CONFIG_PACKAGE_kmod-shortcut-fe=y
          CONFIG_PACKAGE_kmod-shortcut-fe-cm=y
          CONFIG_PACKAGE_luci-app-vsftpd=n
          CONFIG_PACKAGE_vsftpd=n
          CONFIG_PACKAGE_ath10k-firmware-qca988x=n
          CONFIG_PACKAGE_ath10k-firmware-qca988x-ct=n
          CONFIG_PACKAGE_ath10k-firmware-qca988x-ct-full-htt=y
          EOF

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
          make download -j16
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile Firmware
        id: compile
        run: |
          cd $OPENWRTROOT
          echo -e "$(nproc) thread compile"
          make tools/compile -j$(nproc) || make tools/compile -j1 V=s
          make target/compile -j$(nproc) || make target/compile -j1 V=s
          make diffconfig
          make package/compile -j$(nproc) || make package/compile -j1 V=s
          make package/index
          make package/install -j$(nproc) || make package/install -j1 V=s
          make target/install -j$(nproc) || make target/install -j1 V=s
          make checksum

      - name: Organize Files
        id: organize
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          df -hT $PWD

      - name: Upload Firmware To Artifact
        id: upload
        uses: actions/upload-artifact@main
        with:
          name: OpenWrt-Firmware
          path: ${{ env.FIRMWARE }}
